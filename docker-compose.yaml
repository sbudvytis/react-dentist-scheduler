version: "3.8"

services:
  postgres-db:
    image: postgres:16.1-alpine
    restart: always
    environment:
      POSTGRES_USER: turing
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookings
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d bookings -U turing"]
      interval: 5s
      timeout: 5s
      retries: 5

    volumes:
      - bookings-db:/var/lib/postgresql/data

  # start up an API server
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    env_file:
      - ./server/.env
    environment:
      DB_HOST: postgres-db
      DB_USER: turing
      DB_PASSWORD: postgres
      DB_SSL: true
      DB_NAME: react-bookings
    ports:
      - "3000:3000"
    depends_on:
      postgres-db:
        condition: service_healthy

  # start up a client (and proxy) server
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        VITE_API_ORIGIN: http://localhost:3001
        VITE_API_PATH: /api/v1/trpc/
    environment:
      API_PROXY_PASS: http://server:3000
    ports:
      - "3001:80"
    depends_on:
      - server

volumes:
  bookings-db:
